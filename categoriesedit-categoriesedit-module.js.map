{"version":3,"sources":["webpack:///./src/app/layout/categoriesedit/categoriesedit-routing.module.ts","webpack:///./src/app/layout/categoriesedit/categoriesedit.component.html","webpack:///./src/app/layout/categoriesedit/categoriesedit.component.scss","webpack:///./src/app/layout/categoriesedit/categoriesedit.component.ts","webpack:///./src/app/layout/categoriesedit/categoriesedit.module.ts"],"names":[],"mappings":"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","file":"categoriesedit-categoriesedit-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CategorieseditComponent } from './categoriesedit.component';\n\nconst routes: Routes = [\n    {\n        path: '', component: CategorieseditComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class CategorieseditRoutingModule {\n}\n","module.exports = \"\\n\\n\\n\\n\\n<div class=\\\"container-fluid  \\\" style=\\\"background-color: #f7f7f7; min-height: 50%;    color: #73879c;padding-bottom: 30px\\\">\\n  <div>\\n    <h1 class=\\\"h3\\\" style=\\\"padding-top: 20px;padding-bottom: 20px\\\">{{title}}</h1>\\n\\n  \\n  </div>\\n      <div style=\\\"\\\">\\n      \\t<form  style=\\\"padding-left: 200px\\\" [formGroup]=\\\"cat\\\" (ngSubmit)=\\\"update()\\\">\\n\\n          \\n\\n\\n        \\n\\n        <div class=\\\"col-md-6 form-group\\\">\\n          <label for=\\\"title\\\">Title: </label>\\n          <input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\" placeholder=\\\"Enter title...\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\">\\n\\n           <div *ngIf=\\\"submitted && f.title.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.title.errors.required\\\">Title is required</div>\\n                        </div>\\n        </div>\\n\\n        <div class=\\\"col-md-6 form-group\\\">\\n          <label for=\\\"image_url\\\">Image URL?: </label>\\n          <input type=\\\"text\\\" formControlName=\\\"image_url\\\" class=\\\"form-control\\\" placeholder=\\\"Enter image_url...\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.image_url.errors }\\\">\\n\\n           <div *ngIf=\\\"submitted && f.image_url.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.image_url.errors.required\\\">Image URL?: is required</div>\\n                        </div>\\n        </div>\\n\\n        <div class=\\\"col-md-6 form-group\\\">\\n          <label for=\\\"slug\\\">Slug: </label>\\n          <input type=\\\"text\\\" formControlName=\\\"slug\\\" class=\\\"form-control\\\" placeholder=\\\"Enter slug...\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.slug.errors }\\\">\\n\\n           <div *ngIf=\\\"submitted && f.slug.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.slug.errors.required\\\">slug is required</div>\\n                        </div>\\n        </div>\\n      \\n\\n            <div class=\\\"col-md-offset-5 col-md-6 form-group\\\">\\n              <input type=\\\"submit\\\" value=\\\"submit\\\" [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">\\n            </div>\\n          </form>\\n\\n{{cat.value|json}}\\n      </div>\\n\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9jYXRlZ29yaWVzZWRpdC9jYXRlZ29yaWVzZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder,FormGroup,Validators } from '@angular/forms';\nimport  {ReactiveFormsModule} from '@angular/forms';\nimport {Router,ActivatedRoute}  from '@angular/router';\nimport {OperationService}  from '../operation.service';\n\n@Component({\n  selector: 'app-categoriesedit',\n  templateUrl: './categoriesedit.component.html',\n  styleUrls: ['./categoriesedit.component.scss']\n})\nexport class CategorieseditComponent implements OnInit {\n cat:FormGroup;\n    x: any;\n    model: any = {};\n    submitted = false;\n    id:any;\n    title:string;\n  constructor(private fb : FormBuilder,private active:ActivatedRoute,private operation:OperationService,private router:Router) { }\n\n\nupdate(){\n      \n     //insert and update cat\n\n      if(this.id==undefined){\n\n        this.submitted = true;\n        if (this.cat.invalid) {\n           \n            return;\n        }else{\n       this.operation.insertdata(this.cat.value,\"cat_reg\")\n       this.router.navigate(['categories'])\n            }\n\n      }else{\n         this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.cat.invalid) {\n           \n            return;\n        }else{\n          this.operation.updatedata(this.cat.value,'cat_update');\n          \n          this.router.navigate(['categories']);\n        }\n        \n        console.log(this.cat.invalid)\n        alert('SUCCESS!! :-)')\n   \n        \n      }\n}\n\n\n\n\n\n  ngOnInit() {\n\nthis.active.params.subscribe(params=>{\n       this.id=params['id'];\n       \n\n         if(this.id==undefined){\n              this.title=\"Add Categories\";\n           }\n           else{\n             this.title=\"Update Categories\"\n             this.operation.Edit(params['id'],\"editcat\").subscribe(res=>{\n           this.x=res[0];\n             // put values in the form\n             console.log(res)\n      this.cat.setValue({\n      categories_id:this.x.categories_id,\n      title:this.x.title,\n      image_url:this.x.image_url,\n    \n      slug:this.x.slug,\n      \n\n                });\n         })\n           }\n  });\n\n\n\n  \t  \tthis.cat=this.fb.group(\n  \t{\n  \t\t\n     \n   \n   categories_id:[''],\n   title:['',Validators.required],\n   image_url:['',Validators.required],\n   slug:['',Validators.required],\n\n  \t});\n  }\n\n   get f() { return this.cat.controls; }\n\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbCarouselModule, NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CategorieseditComponent } from './categoriesedit.component';\n\nimport { CategorieseditRoutingModule } from './categoriesedit-routing.module';\n\nimport  {FormsModule} from '@angular/forms';\nimport  {ReactiveFormsModule} from '@angular/forms';\nimport { HttpClientModule} from '@angular/common/http';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NgbCarouselModule,\n        NgbAlertModule,\n       CategorieseditRoutingModule\n       ,FormsModule,ReactiveFormsModule,HttpClientModule\n        \n    ],\n    declarations: [\n\n        CategorieseditComponent\n    ]\n})\nexport class CategorieseditModule {}\n"],"sourceRoot":""}